// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.0
// source: kamchatka.proto

package _go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRouteCoordinatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRouteCoordinatesRequest) Reset() {
	*x = GetRouteCoordinatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteCoordinatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteCoordinatesRequest) ProtoMessage() {}

func (x *GetRouteCoordinatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteCoordinatesRequest.ProtoReflect.Descriptor instead.
func (*GetRouteCoordinatesRequest) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{0}
}

func (x *GetRouteCoordinatesRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetRouteCoordinatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coordinates []*Coordinate `protobuf:"bytes,1,rep,name=coordinates,proto3" json:"coordinates,omitempty"`
}

func (x *GetRouteCoordinatesResponse) Reset() {
	*x = GetRouteCoordinatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteCoordinatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteCoordinatesResponse) ProtoMessage() {}

func (x *GetRouteCoordinatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteCoordinatesResponse.ProtoReflect.Descriptor instead.
func (*GetRouteCoordinatesResponse) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{1}
}

func (x *GetRouteCoordinatesResponse) GetCoordinates() []*Coordinate {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

type Coordinate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Dot  []string `protobuf:"bytes,2,rep,name=dot,proto3" json:"dot,omitempty"`
}

func (x *Coordinate) Reset() {
	*x = Coordinate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinate) ProtoMessage() {}

func (x *Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinate.ProtoReflect.Descriptor instead.
func (*Coordinate) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{2}
}

func (x *Coordinate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Coordinate) GetDot() []string {
	if x != nil {
		return x.Dot
	}
	return nil
}

type GetRecreationalCapacityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRecreationalCapacityRequest) Reset() {
	*x = GetRecreationalCapacityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecreationalCapacityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecreationalCapacityRequest) ProtoMessage() {}

func (x *GetRecreationalCapacityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecreationalCapacityRequest.ProtoReflect.Descriptor instead.
func (*GetRecreationalCapacityRequest) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{3}
}

func (x *GetRecreationalCapacityRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetRecreationalCapacityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length             float32 `protobuf:"fixed32,1,opt,name=length,proto3" json:"length,omitempty"`
	Daytime            float32 `protobuf:"fixed32,2,opt,name=daytime,proto3" json:"daytime,omitempty"`
	Distance           float32 `protobuf:"fixed32,3,opt,name=distance,proto3" json:"distance,omitempty"`
	AverageTime        float32 `protobuf:"fixed32,4,opt,name=average_time,json=averageTime,proto3" json:"average_time,omitempty"`
	AverageHumans      int32   `protobuf:"varint,5,opt,name=average_humans,json=averageHumans,proto3" json:"average_humans,omitempty"`
	AverageDays        float32 `protobuf:"fixed32,6,opt,name=average_days,json=averageDays,proto3" json:"average_days,omitempty"`
	RecreationalResult float32 `protobuf:"fixed32,7,opt,name=recreational_result,json=recreationalResult,proto3" json:"recreational_result,omitempty"`
}

func (x *GetRecreationalCapacityResponse) Reset() {
	*x = GetRecreationalCapacityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecreationalCapacityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecreationalCapacityResponse) ProtoMessage() {}

func (x *GetRecreationalCapacityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecreationalCapacityResponse.ProtoReflect.Descriptor instead.
func (*GetRecreationalCapacityResponse) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{4}
}

func (x *GetRecreationalCapacityResponse) GetLength() float32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *GetRecreationalCapacityResponse) GetDaytime() float32 {
	if x != nil {
		return x.Daytime
	}
	return 0
}

func (x *GetRecreationalCapacityResponse) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *GetRecreationalCapacityResponse) GetAverageTime() float32 {
	if x != nil {
		return x.AverageTime
	}
	return 0
}

func (x *GetRecreationalCapacityResponse) GetAverageHumans() int32 {
	if x != nil {
		return x.AverageHumans
	}
	return 0
}

func (x *GetRecreationalCapacityResponse) GetAverageDays() float32 {
	if x != nil {
		return x.AverageDays
	}
	return 0
}

func (x *GetRecreationalCapacityResponse) GetRecreationalResult() float32 {
	if x != nil {
		return x.RecreationalResult
	}
	return 0
}

type AddAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      float32 `protobuf:"fixed32,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ImageUrl    string  `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *AddAlertRequest) Reset() {
	*x = AddAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAlertRequest) ProtoMessage() {}

func (x *AddAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAlertRequest.ProtoReflect.Descriptor instead.
func (*AddAlertRequest) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{5}
}

func (x *AddAlertRequest) GetUserId() float32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddAlertRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddAlertRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type StringResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *StringResultResponse) Reset() {
	*x = StringResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringResultResponse) ProtoMessage() {}

func (x *StringResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringResultResponse.ProtoReflect.Descriptor instead.
func (*StringResultResponse) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{6}
}

func (x *StringResultResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Phone string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{7}
}

func (x *CreateUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateUserRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{8}
}

func (x *CreateUserResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateRecreationalCapacityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Length        float32 `protobuf:"fixed32,2,opt,name=length,proto3" json:"length,omitempty"`
	Daytime       float32 `protobuf:"fixed32,3,opt,name=daytime,proto3" json:"daytime,omitempty"`
	Distance      float32 `protobuf:"fixed32,4,opt,name=distance,proto3" json:"distance,omitempty"`
	AverageTime   float32 `protobuf:"fixed32,5,opt,name=average_time,json=averageTime,proto3" json:"average_time,omitempty"`
	AverageHumans int32   `protobuf:"varint,6,opt,name=average_humans,json=averageHumans,proto3" json:"average_humans,omitempty"`
	AverageDays   float32 `protobuf:"fixed32,7,opt,name=average_days,json=averageDays,proto3" json:"average_days,omitempty"`
}

func (x *UpdateRecreationalCapacityRequest) Reset() {
	*x = UpdateRecreationalCapacityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecreationalCapacityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecreationalCapacityRequest) ProtoMessage() {}

func (x *UpdateRecreationalCapacityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecreationalCapacityRequest.ProtoReflect.Descriptor instead.
func (*UpdateRecreationalCapacityRequest) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateRecreationalCapacityRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRecreationalCapacityRequest) GetLength() float32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *UpdateRecreationalCapacityRequest) GetDaytime() float32 {
	if x != nil {
		return x.Daytime
	}
	return 0
}

func (x *UpdateRecreationalCapacityRequest) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *UpdateRecreationalCapacityRequest) GetAverageTime() float32 {
	if x != nil {
		return x.AverageTime
	}
	return 0
}

func (x *UpdateRecreationalCapacityRequest) GetAverageHumans() int32 {
	if x != nil {
		return x.AverageHumans
	}
	return 0
}

func (x *UpdateRecreationalCapacityRequest) GetAverageDays() float32 {
	if x != nil {
		return x.AverageDays
	}
	return 0
}

type UpdateRecreationalCapacityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecreationalResult float32 `protobuf:"fixed32,1,opt,name=recreational_result,json=recreationalResult,proto3" json:"recreational_result,omitempty"`
}

func (x *UpdateRecreationalCapacityResponse) Reset() {
	*x = UpdateRecreationalCapacityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecreationalCapacityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecreationalCapacityResponse) ProtoMessage() {}

func (x *UpdateRecreationalCapacityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecreationalCapacityResponse.ProtoReflect.Descriptor instead.
func (*UpdateRecreationalCapacityResponse) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateRecreationalCapacityResponse) GetRecreationalResult() float32 {
	if x != nil {
		return x.RecreationalResult
	}
	return 0
}

type GetGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGroupsRequest) Reset() {
	*x = GetGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsRequest) ProtoMessage() {}

func (x *GetGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsRequest.ProtoReflect.Descriptor instead.
func (*GetGroupsRequest) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{11}
}

type GetGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GetGroupsResponse) Reset() {
	*x = GetGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsResponse) ProtoMessage() {}

func (x *GetGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsResponse.ProtoReflect.Descriptor instead.
func (*GetGroupsResponse) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{12}
}

func (x *GetGroupsResponse) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{13}
}

func (x *Group) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetGroupTerritoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetGroupTerritoriesRequest) Reset() {
	*x = GetGroupTerritoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupTerritoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupTerritoriesRequest) ProtoMessage() {}

func (x *GetGroupTerritoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupTerritoriesRequest.ProtoReflect.Descriptor instead.
func (*GetGroupTerritoriesRequest) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{14}
}

func (x *GetGroupTerritoriesRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetGroupTerritoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Territories []*Territory `protobuf:"bytes,1,rep,name=territories,proto3" json:"territories,omitempty"`
}

func (x *GetGroupTerritoriesResponse) Reset() {
	*x = GetGroupTerritoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupTerritoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupTerritoriesResponse) ProtoMessage() {}

func (x *GetGroupTerritoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupTerritoriesResponse.ProtoReflect.Descriptor instead.
func (*GetGroupTerritoriesResponse) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{15}
}

func (x *GetGroupTerritoriesResponse) GetTerritories() []*Territory {
	if x != nil {
		return x.Territories
	}
	return nil
}

type Territory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CurrentWorkload int64  `protobuf:"varint,3,opt,name=current_workload,json=currentWorkload,proto3" json:"current_workload,omitempty"`
	RouteOpen       bool   `protobuf:"varint,4,opt,name=route_open,json=routeOpen,proto3" json:"route_open,omitempty"`
}

func (x *Territory) Reset() {
	*x = Territory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kamchatka_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Territory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Territory) ProtoMessage() {}

func (x *Territory) ProtoReflect() protoreflect.Message {
	mi := &file_kamchatka_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Territory.ProtoReflect.Descriptor instead.
func (*Territory) Descriptor() ([]byte, []int) {
	return file_kamchatka_proto_rawDescGZIP(), []int{16}
}

func (x *Territory) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Territory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Territory) GetCurrentWorkload() int64 {
	if x != nil {
		return x.CurrentWorkload
	}
	return 0
}

func (x *Territory) GetRouteOpen() bool {
	if x != nil {
		return x.RouteOpen
	}
	return false
}

var File_kamchatka_proto protoreflect.FileDescriptor

var file_kamchatka_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6b, 0x61, 0x6d, 0x63, 0x68, 0x61, 0x74, 0x6b, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x2c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x22, 0x32, 0x0a, 0x0a, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x74, 0x22, 0x30, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8d,
	0x02, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61,
	0x79, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x64, 0x61, 0x79,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x68,
	0x75, 0x6d, 0x61, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x2f, 0x0a,
	0x13, 0x72, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x72, 0x65, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x69,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x2e, 0x0a, 0x14, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3d, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xee,
	0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x64,
	0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x79, 0x73, 0x22,
	0x55, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x12, 0x72, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x23, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x22, 0x2b, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x2c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65, 0x72,
	0x72, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x50, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65, 0x72, 0x72, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x0b, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x0b, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x22, 0x79, 0x0a, 0x09, 0x54, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x32, 0xe1, 0x04, 0x0a,
	0x10, 0x4b, 0x61, 0x6d, 0x63, 0x68, 0x61, 0x74, 0x6b, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x12, 0x15, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x27, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65, 0x72, 0x72, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65, 0x72,
	0x72, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x3a, 0x5a, 0x38, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x49, 0x54, 0x2d, 0x49, 0x50, 0x4f, 0x54, 0x45, 0x4b, 0x41, 0x2d, 0x32, 0x35, 0x2f, 0x6b, 0x61,
	0x6d, 0x63, 0x68, 0x61, 0x74, 0x6b, 0x61, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kamchatka_proto_rawDescOnce sync.Once
	file_kamchatka_proto_rawDescData = file_kamchatka_proto_rawDesc
)

func file_kamchatka_proto_rawDescGZIP() []byte {
	file_kamchatka_proto_rawDescOnce.Do(func() {
		file_kamchatka_proto_rawDescData = protoimpl.X.CompressGZIP(file_kamchatka_proto_rawDescData)
	})
	return file_kamchatka_proto_rawDescData
}

var file_kamchatka_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_kamchatka_proto_goTypes = []any{
	(*GetRouteCoordinatesRequest)(nil),         // 0: main.GetRouteCoordinatesRequest
	(*GetRouteCoordinatesResponse)(nil),        // 1: main.GetRouteCoordinatesResponse
	(*Coordinate)(nil),                         // 2: main.Coordinate
	(*GetRecreationalCapacityRequest)(nil),     // 3: main.GetRecreationalCapacityRequest
	(*GetRecreationalCapacityResponse)(nil),    // 4: main.GetRecreationalCapacityResponse
	(*AddAlertRequest)(nil),                    // 5: main.AddAlertRequest
	(*StringResultResponse)(nil),               // 6: main.StringResultResponse
	(*CreateUserRequest)(nil),                  // 7: main.CreateUserRequest
	(*CreateUserResponse)(nil),                 // 8: main.CreateUserResponse
	(*UpdateRecreationalCapacityRequest)(nil),  // 9: main.UpdateRecreationalCapacityRequest
	(*UpdateRecreationalCapacityResponse)(nil), // 10: main.UpdateRecreationalCapacityResponse
	(*GetGroupsRequest)(nil),                   // 11: main.GetGroupsRequest
	(*GetGroupsResponse)(nil),                  // 12: main.GetGroupsResponse
	(*Group)(nil),                              // 13: main.Group
	(*GetGroupTerritoriesRequest)(nil),         // 14: main.GetGroupTerritoriesRequest
	(*GetGroupTerritoriesResponse)(nil),        // 15: main.GetGroupTerritoriesResponse
	(*Territory)(nil),                          // 16: main.Territory
}
var file_kamchatka_proto_depIdxs = []int32{
	2,  // 0: main.GetRouteCoordinatesResponse.coordinates:type_name -> main.Coordinate
	13, // 1: main.GetGroupsResponse.groups:type_name -> main.Group
	16, // 2: main.GetGroupTerritoriesResponse.territories:type_name -> main.Territory
	0,  // 3: main.KamchatkaService.GetRouteCoordinates:input_type -> main.GetRouteCoordinatesRequest
	3,  // 4: main.KamchatkaService.GetRecreationalCapacity:input_type -> main.GetRecreationalCapacityRequest
	5,  // 5: main.KamchatkaService.AddAlert:input_type -> main.AddAlertRequest
	7,  // 6: main.KamchatkaService.CreateUser:input_type -> main.CreateUserRequest
	9,  // 7: main.KamchatkaService.UpdateRecreationalCapacity:input_type -> main.UpdateRecreationalCapacityRequest
	11, // 8: main.KamchatkaService.GetGroups:input_type -> main.GetGroupsRequest
	14, // 9: main.KamchatkaService.GetGroupTerritories:input_type -> main.GetGroupTerritoriesRequest
	1,  // 10: main.KamchatkaService.GetRouteCoordinates:output_type -> main.GetRouteCoordinatesResponse
	4,  // 11: main.KamchatkaService.GetRecreationalCapacity:output_type -> main.GetRecreationalCapacityResponse
	6,  // 12: main.KamchatkaService.AddAlert:output_type -> main.StringResultResponse
	8,  // 13: main.KamchatkaService.CreateUser:output_type -> main.CreateUserResponse
	10, // 14: main.KamchatkaService.UpdateRecreationalCapacity:output_type -> main.UpdateRecreationalCapacityResponse
	12, // 15: main.KamchatkaService.GetGroups:output_type -> main.GetGroupsResponse
	15, // 16: main.KamchatkaService.GetGroupTerritories:output_type -> main.GetGroupTerritoriesResponse
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_kamchatka_proto_init() }
func file_kamchatka_proto_init() {
	if File_kamchatka_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kamchatka_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetRouteCoordinatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetRouteCoordinatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Coordinate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetRecreationalCapacityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetRecreationalCapacityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AddAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*StringResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRecreationalCapacityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRecreationalCapacityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetGroupTerritoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetGroupTerritoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kamchatka_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Territory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kamchatka_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kamchatka_proto_goTypes,
		DependencyIndexes: file_kamchatka_proto_depIdxs,
		MessageInfos:      file_kamchatka_proto_msgTypes,
	}.Build()
	File_kamchatka_proto = out.File
	file_kamchatka_proto_rawDesc = nil
	file_kamchatka_proto_goTypes = nil
	file_kamchatka_proto_depIdxs = nil
}
